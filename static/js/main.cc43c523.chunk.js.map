{"version":3,"sources":["main/navBar.tsx","main/movieSelector.tsx","app.tsx","reportWebVitals.ts","index.tsx"],"names":["NavBar","useState","Navbar","color","dark","expand","fixed","Container","NavbarBrand","href","className","MovieSelector","require","Jumbotron","Button","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"so5jBAgFaA,G,MAAS,WAAO,IAAD,EACIC,oBAAS,GADb,6BAKxB,OACI,8BACI,cAACC,EAAA,EAAD,CAAQC,MAAM,OAAOC,MAAI,EAACC,OAAO,KAAKC,MAAM,MAA5C,SACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAaC,KAAK,IAAIC,UAAU,UAAhC,+B,gBCnFPC,GAHKC,EAAQ,IACTA,EAAQ,IAEI,WACzB,OACI,8BACI,cAACL,EAAA,EAAD,UACI,eAACM,EAAA,EAAD,WACI,oBAAIH,UAAU,YAAd,sBACA,mBAAGA,UAAU,OAAb,kCACA,oBAAIA,UAAU,SACd,mDACA,mBAAGA,UAAU,OAAb,SACI,cAACI,EAAA,EAAD,CAAQX,MAAM,UAAd,yCCkBTY,G,MA3BH,kBACR,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,SCISC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cc43c523.chunk.js","sourcesContent":["import React, {useState} from 'react';\n// import { NavLink as RouterNavLink } from \"react-router-dom\";\nimport {\n    Collapse,\n    Container,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem } from 'reactstrap';\nimport '@fortawesome/fontawesome-free/css/all.css';\n//import {useSelector} from \"react-redux\";\n//import {getAccountFromIdToken} from \"../redux/auth/selectors\";\n\n// interface IUserAvatarProps extends React.HTMLProps<JSX.Element> {\n//     user: any\n// }\n\n// function UserAvatar(props: IUserAvatarProps) {\n//     // If a user avatar is available, return an img tag with the pic\n//     if (props.user.avatar) {\n//         return <img\n//             src={props.user.avatar} alt=\"user\"\n//             className=\"rounded-circle align-self-center mr-2\"\n//             style={{width: '32px'}} />;\n//     }\n//\n//     // No avatar available, return a default icon\n//     // todo: use FontAwesomeIcon\n//     return <i\n//         className=\"far fa-user-circle fa-lg rounded-circle align-self-center mr-2\"\n//         style={{width: '32px'}} />;\n// }\n//\n// interface IAuthNavItemProps extends React.HTMLProps<JSX.Element> {\n//     isAuthenticated: boolean;\n//     user: any;\n//     authButtonMethod: any\n// }\n\n// function AuthNavItem(props: IAuthNavItemProps) {\n//     // If authenticated, return a dropdown with the user's info and a\n//     // sign out button\n//     const name = useSelector(getAccountFromIdToken)\n//     if (props.isAuthenticated) {\n//         return (\n//             <UncontrolledDropdown>\n//                 <DropdownToggle nav caret>\n//                     <UserAvatar user={props.user}/>\n//                 </DropdownToggle>\n//                 <DropdownMenu right>\n//                     <h5 className=\"dropdown-item-text mb-0\">{name}</h5>\n//                     <p className=\"dropdown-item-text text-muted mb-0\">{props.user.email}</p>\n//                     <DropdownItem divider />\n//                     <DropdownItem onClick={props.authButtonMethod}>Sign Out</DropdownItem>\n//                 </DropdownMenu>\n//             </UncontrolledDropdown>\n//         );\n//     }\n//\n//     // Not authenticated, return a sign in link\n//     return (\n//         <NavItem>\n//             <NavLink onClick={props.authButtonMethod}>Sign In</NavLink>\n//         </NavItem>\n//     );\n// }\n//\n// interface INavBarOwnProps {\n//     isAuthenticated: boolean;\n//     authButtonMethod: any;\n// }\n\n// type NavBarProps = INavBarOwnProps;\n\nexport const NavBar = () => {\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => {\n        setIsOpen(!isOpen);\n    }\n    return (\n        <div>\n            <Navbar color=\"dark\" dark expand=\"md\" fixed=\"top\">\n                <Container>\n                    <NavbarBrand href=\"/\" className=\"mr-auto\">Tycherion</NavbarBrand>\n                    {/*<NavbarToggler onClick={toggle} />*/}\n                    {/*<Collapse isOpen={isOpen} navbar>*/}\n                    {/*    <Nav className=\"mr-auto\" navbar>*/}\n                    {/*        <NavItem>*/}\n                    {/*            /!*<RouterNavLink to=\"/\" className=\"nav-link\" exact>Home</RouterNavLink>*!/*/}\n                    {/*        </NavItem>*/}\n                    {/*        <NavItem>*/}\n                    {/*            /!*<RouterNavLink to=\"/recordings\" className=\"nav-link\" exact>Recordings</RouterNavLink>*!/*/}\n                    {/*        </NavItem>*/}\n                    {/*        <NavItem>*/}\n                    {/*            /!*<RouterNavLink to=\"/uploads\" className=\"nav-link\" exact>Uploads</RouterNavLink>*!/*/}\n                    {/*        </NavItem>*/}\n\n\n                    {/*    </Nav>*/}\n                    {/*    <Nav className=\"justify-content-end\" navbar>*/}\n                    {/*        /!*<NavItem>*!/*/}\n                    {/*        /!*    <NavLink href=\"https://developer.microsoft.com/graph/docs/concepts/overview\" target=\"_blank\">*!/*/}\n                    {/*        /!*        <i className=\"fas fa-external-link-alt mr-1\" />*!/*/}\n                    {/*        /!*        Docs*!/*/}\n                    {/*        /!*    </NavLink>*!/*/}\n                    {/*        /!*</NavItem>*!/*/}\n                    {/*        /!*<AuthNavItem*!/*/}\n                    {/*        /!*    isAuthenticated={isAuthenticated}*!/*/}\n                    {/*        /!*    authButtonMethod={authButtonMethod}*!/*/}\n                    {/*        /!*    user={{}} />*!/*/}\n                    {/*    </Nav>*/}\n                    {/*</Collapse>*/}\n                </Container>\n            </Navbar>\n        </div>\n    );\n}\n\n// export class NavBarOld extends React.Component<NavBarProps, INavBarState> {\n//     constructor(props: NavBarProps) {\n//         super(props);\n//\n//         this.toggle = this.toggle.bind(this);\n//         this.state = {\n//             isOpen: false\n//         };\n//     }\n//\n//     toggle(): void {\n//         this.setState({\n//             isOpen: !this.state.isOpen\n//         });\n//     }\n//\n//     render(): ReactNode {\n//\n//         return (\n//             <div>\n//                 <Navbar color=\"dark\" dark expand=\"md\" fixed=\"top\">\n//                     <Container>\n//                         <NavbarBrand href=\"/\">Media Recorder Test</NavbarBrand>\n//                         <NavbarToggler onClick={this.toggle} />\n//                         <Collapse isOpen={this.state.isOpen} navbar>\n//                             <Nav className=\"mr-auto\" navbar>\n//                                 <NavItem>\n//                                     <RouterNavLink to=\"/\" className=\"nav-link\" exact>Home</RouterNavLink>\n//                                 </NavItem>\n//                                 <NavItem>\n//                                     <RouterNavLink to=\"/uploads\" className=\"nav-link\" exact>Uploads</RouterNavLink>\n//                                 </NavItem>\n//                                 {/*{calendarLink}*/}\n//                             </Nav>\n//                             <Nav className=\"justify-content-end\" navbar>\n//                                 {/*<NavItem>*/}\n//                                 {/*    <NavLink href=\"https://developer.microsoft.com/graph/docs/concepts/overview\" target=\"_blank\">*/}\n//                                 {/*        <i className=\"fas fa-external-link-alt mr-1\" />*/}\n//                                 {/*        Docs*/}\n//                                 {/*    </NavLink>*/}\n//                                 {/*</NavItem>*/}\n//                                 <AuthNavItem\n//                                     isAuthenticated={this.props.isAuthenticated}\n//                                     authButtonMethod={this.props.authButtonMethod}\n//                                     user={this.props.user} />\n//                             </Nav>\n//                         </Collapse>\n//                     </Container>\n//                 </Navbar>\n//             </div>\n//         );\n//     }\n// }","import {Button, Container, Jumbotron, Navbar} from \"reactstrap\";\nimport React from \"react\";\n\nconst movieList = require('../data/films.json');\nconst metaData = require('../data/filmsMetaData.json');\n\nexport const MovieSelector = () => {\n    return (\n        <div>\n            <Container>\n                <Jumbotron>\n                    <h1 className=\"display-3\">Testing!</h1>\n                    <p className=\"lead\">This is just a test.</p>\n                    <hr className=\"my-2\" />\n                    <p>Content goes here.</p>\n                    <p className=\"lead\">\n                        <Button color=\"primary\">I accept my fate</Button>\n                    </p>\n                    {/*<pre>*/}\n                    {/*    {JSON.stringify(movieList)}*/}\n                    {/*</pre>*/}\n\n                </Jumbotron>\n            </Container>\n        </div>);\n}","import React from 'react';\n// import logo from './logo.svg';\n// import './app.css';\nimport {NavBar} from \"./main/navBar\";\nimport {MovieSelector} from \"./main/movieSelector\";\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst App = () => (\n    <>\n      <NavBar/>\n      <MovieSelector/>\n    </>\n);\n\n\n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>\n    //       Edit <code>src/App.tsx</code> and save to reload.\n    //     </p>\n    //     <a\n    //       className=\"App-link\"\n    //       href=\"https://reactjs.org\"\n    //       target=\"_blank\"\n    //       rel=\"noopener noreferrer\"\n    //     >\n    //       Learn React\n    //     </a>\n    //   </header>\n    // </div>\n//   );\n// }\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}